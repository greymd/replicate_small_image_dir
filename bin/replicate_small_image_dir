#!/usr/bin/env bash
set -eu
readonly THIS_DIR="$(cd "$(dirname "${BASH_SOURCE[0]:-$0}")" && pwd)"
readonly RSID_DEBUG=${RSID_DEBUG:-0}
TMPDIR=${TMPDIR:-${XDG_RUNTIME_DIR:-/tmp}}
DIR_LIST="$TMPDIR"/dir_list
trap 'rm -f "$TMPDIR"/dir_list' EXIT

log_info () {
  printf "$(date "+%F_%T ")"'[INFO] %s\n' "$1" >&2
}

main () {
  local _src="${1%/}" ;shift
  local _dst="${1%/}" ;shift
  local _exec=
  if [[ $RSID_DEBUG == 1 ]];then
    _exec="cat"
  else
    _exec="sh"
  fi
  ## Sync src and dst dirs
  "$THIS_DIR"/sync_dir_structure "$_src" "$_dst" > "$DIR_LIST"
  ## Create small image files
  while read -r d;
  do
    local _dstdir="$_dst$d"
    local _srcdir="$_src$d"
    [[ "$(stat -c '%y' "$_srcdir")" == "$(stat -c '%y' "$_dstdir")" ]] && {
      log_info "Skip copy since ${_dstdir@Q} is latest"
      continue
    }
    while read -r f;
    do
      local _newfile="$_dstdir${f#$_srcdir}"
      log_info "Resize ${f@Q} to ${_newfile@Q}"
      echo "convert -resize '300^>' ${f@Q} ${_newfile@Q}" | $_exec
    done < <(find "$_srcdir" -type f -maxdepth 1 -iname '*.jpg' -o -iname '*.png')
    ## sync modified timestamp to run future scans efficiently.
    touch -m -d "$(stat -c '%y' "$_srcdir")" "$_dstdir"
  done < "$DIR_LIST"
}

main ${1+"$@"}
